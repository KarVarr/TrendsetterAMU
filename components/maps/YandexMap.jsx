// "use client";

// import { useEffect, useRef } from "react";
// import Script from "next/script";

// const apiKey = process.env.NEXT_PUBLIC_YANDEX_MAPS_API_KEY;
// const YandexMap = ({
//   center = [40.183347, 44.514810],
//   zoom = 16,
//   width = "100%",
//   height = "400px",
// }) => {
//   const mapRef = useRef(null);
//   const hasMap = useRef(false); // üîí –§–ª–∞–≥, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

//   useEffect(() => {
//     if (!mapRef.current || hasMap.current) return;

//     const initMap = () => {
//       if (hasMap.current) return;
//       const map = new window.ymaps.Map(mapRef.current, {
//         center,
//         zoom,
//         controls: ["zoomControl", "fullscreenControl"],
//       });

//       map.geoObjects.add(
//         new window.ymaps.Placemark(
//           center,
//           { balloonContent: "–¢–¶ –¢–∞—à–∏—Ä —Å—Ç—Ä–∏—Ç, –°–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç 6/2" },
//           { preset: "islands#redDotIcon" }
//         )
//       );

//       hasMap.current = true; // –ø–æ–º–µ—á–∞–µ–º, —á—Ç–æ –∫–∞—Ä—Ç–∞ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
//     };

//     if (window.ymaps) {
//       window.ymaps.ready(initMap);
//     }
//   }, [center.join(","), zoom]);

//   return (
//     <>
//       <Script
//         src={`https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`}
//         strategy="afterInteractive" // ‚úÖ –õ—É—á—à–µ —á–µ–º beforeInteractive –¥–ª—è —ç—Ç–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
//       />
//       <div ref={mapRef} style={{ width, height }} />
//     </>
//   );
// };

// export default YandexMap;

// "use client";

// import { useEffect, useRef } from "react";
// import Script from "next/script";

// const apiKey = process.env.NEXT_PUBLIC_YANDEX_MAPS_API_KEY;

// const YandexMap = ({
//   center = [40.183347, 44.514810],
//   zoom = 16,
//   width = "100%",
//   height = "400px",
// }) => {
//   const mapRef = useRef(null);
//   const hasMap = useRef(false);
//   let mapInstance = useRef(null);

//   useEffect(() => {
//     const initMap = () => {
//       if (hasMap.current || !mapRef.current || !window.ymaps) return;

//       mapInstance.current = new window.ymaps.Map(mapRef.current, {
//         center,
//         zoom,
//         controls: ["zoomControl", "fullscreenControl"],
//       });

//       mapInstance.current.geoObjects.add(
//         new window.ymaps.Placemark(
//           center,
//           { balloonContent: "–¢–¶ –¢–∞—à–∏—Ä —Å—Ç—Ä–∏—Ç, –°–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç 6/2" },
//           { preset: "islands#redDotIcon" }
//         )
//       );

//       hasMap.current = true;
//     };

//     if (window.ymaps) {
//       window.ymaps.ready(initMap);
//     }

//     return () => {
//       if (mapRef.current) {
//         mapRef.current.innerHTML = "";
//       }
//       hasMap.current = false;
//     };
//   }, [center.join(","), zoom]);

//   return (
//     <>
//       <Script
//         src={`https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`}
//         strategy="beforeInteractive"
//       />
//       <div ref={mapRef} style={{ width, height }} />
//     </>
//   );
// };

// export default YandexMap;

// "use client";

// import { useEffect, useRef, useState } from "react";
// import Script from "next/script";

// const apiKey = process.env.NEXT_PUBLIC_YANDEX_MAPS_API_KEY;

// const YandexMap = ({
//   center = [40.183347, 44.514810],
//   zoom = 16,
//   width = "100%",
//   height = "400px",
// }) => {
//   const mapRef = useRef(null);
//   const [isScriptLoaded, setIsScriptLoaded] = useState(false);
//   const hasMap = useRef(false);

//   useEffect(() => {
//     if (!isScriptLoaded || hasMap.current || !mapRef.current) return;

//     const initMap = () => {
//       if (!window.ymaps || hasMap.current || !mapRef.current) return;

//       const map = new window.ymaps.Map(mapRef.current, {
//         center,
//         zoom,
//         controls: ["zoomControl", "fullscreenControl"],
//       });

//       map.geoObjects.add(
//         new window.ymaps.Placemark(
//           center,
//           { balloonContent: "–¢–¶ –¢–∞—à–∏—Ä —Å—Ç—Ä–∏—Ç, –°–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç 6/2" },
//           { preset: "islands#redDotIcon" }
//         )
//       );

//       hasMap.current = true;
//     };

//     window.ymaps.ready(initMap);

//     return () => {
//       if (mapRef.current) {
//         mapRef.current.innerHTML = "";
//       }
//       hasMap.current = false;
//     };
//   }, [isScriptLoaded]);

//   return (
//     <>
//       <Script
//         src={`https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`}
//         strategy="afterInteractive"
//         onLoad={() => setIsScriptLoaded(true)}
//       />
//       <div ref={mapRef} style={{ width, height }} />
//     </>
//   );
// };

// export default YandexMap;

"use client";

import { useEffect, useRef } from "react";

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ API
let isApiLoading = false;
let isApiLoaded = false;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ API –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç (–µ–¥–∏–Ω–æ–∂–¥—ã)
const loadYandexMapsApi = () => {
  return new Promise((resolve, reject) => {
    // –ï—Å–ª–∏ API —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, —Å—Ä–∞–∑—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (isApiLoaded && window.ymaps) {
      resolve(window.ymaps);
      return;
    }
    
    // –ï—Å–ª–∏ API —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    if (isApiLoading) {
      const checkInterval = setInterval(() => {
        if (isApiLoaded && window.ymaps) {
          clearInterval(checkInterval);
          resolve(window.ymaps);
        }
      }, 100);
      return;
    }
    
    // –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É API
    isApiLoading = true;
    
    const apiKey = process.env.NEXT_PUBLIC_YANDEX_MAPS_API_KEY;
    if (!apiKey) {
      isApiLoading = false;
      reject(new Error("Yandex Maps API key is missing!"));
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç —É–∂–µ
    const existingScript = document.querySelector(
      `script[src*="api-maps.yandex.ru/2.1"]`
    );
    
    if (existingScript) {
      // –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∂–¥–µ–º –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–∏
      if (window.ymaps) {
        isApiLoaded = true;
        isApiLoading = false;
        resolve(window.ymaps);
      } else {
        existingScript.addEventListener("load", () => {
          window.ymaps.ready(() => {
            isApiLoaded = true;
            isApiLoading = false;
            resolve(window.ymaps);
          });
        });
        
        existingScript.addEventListener("error", () => {
          isApiLoading = false;
          reject(new Error("Failed to load Yandex Maps script"));
        });
      }
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç
    const script = document.createElement("script");
    script.src = `https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`;
    script.async = true;
    
    script.onload = () => {
      window.ymaps.ready(() => {
        isApiLoaded = true;
        isApiLoading = false;
        resolve(window.ymaps);
      });
    };
    
    script.onerror = () => {
      isApiLoading = false;
      reject(new Error("Failed to load Yandex Maps script"));
    };
    
    document.body.appendChild(script);
  });
};

const YandexMap = ({
  center = [40.183347, 44.514810],
  zoom = 16,
  width = "100%",
  height = "400px",
}) => {
  const mapRef = useRef(null);
  const mapInstance = useRef(null);

  useEffect(() => {
    // Safe check for browser environment
    if (typeof window === "undefined" || !mapRef.current) return;
    
    // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –µ—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ —á—Ç–æ-—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
    if (mapRef.current.innerHTML !== "") {
      mapRef.current.innerHTML = "";
    }
    
    let isMounted = true;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º API –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
    loadYandexMapsApi()
      .then((ymaps) => {
        if (!isMounted || !mapRef.current) return;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–Ω–∞ –ª–∏ —É–∂–µ –∫–∞—Ä—Ç–∞ –Ω–∞ —ç—Ç–æ–º DOM —ç–ª–µ–º–µ–Ω—Ç–µ
        if (mapInstance.current) {
          mapInstance.current.destroy();
          mapInstance.current = null;
        }
        
        try {
          const map = new ymaps.Map(mapRef.current, {
            center,
            zoom,
            controls: ["zoomControl", "fullscreenControl"],
          });
          
          map.geoObjects.add(
            new ymaps.Placemark(
              center,
              { balloonContent: "–¢–¶ –¢–∞—à–∏—Ä —Å—Ç—Ä–∏—Ç, –°–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç 6/2" },
              { preset: "islands#redDotIcon" }
            )
          );
          
          mapInstance.current = map;
        } catch (error) {
          console.error("Failed to initialize Yandex Map:", error);
        }
      })
      .catch((error) => {
        console.error(error);
      });
      
    // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
    return () => {
      isMounted = false;
      if (mapInstance.current) {
        mapInstance.current.destroy();
        mapInstance.current = null;
      }
    };
  }, [center, zoom]);

  return <div ref={mapRef} style={{ width, height }} />;
};

export default YandexMap;